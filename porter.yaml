# This is the configuration for Porter
# You must define steps for each action, but the rest is optional
# See https://porter.sh/author-bundles for documentation on how to configure your bundle
# Uncomment out the sections below to take full advantage of what Porter can do!

name: HELLO
version: 0.1.0
description: "An example Porter configuration"
# TODO: update the registry to your own, e.g. myregistry/porter-hello:v0.1.0
tag: getporter/porter-hello:v0.1.0

# Uncomment the line below to use a template Dockerfile for your invocation image
#dockerfile: Dockerfile.tmpl

mixins:
  - exec
  - az
  - kubernetes

install:
  - exec: 
      description: "Logging in to Azure..."
      command: "bash"
      flags:
        c: '"az login --service-principal --username {{ bundle.credentials.SP_APP_ID}} --password {{ bundle.credentials.SP_CLIENT_SECRET}} --tenant {{ bundle.credentials.TENANT_ID}} >> /dev/null"'
  - exec:
      command: bash
      description: "Setting the subscription..."
      flags:
        c: '"az account set --subscription {{bundle.credentials.SUBSCRIPTION_ID}}"'

  - exec:
      command: "bash"
      description: "Creating the resource groups...."
      flags:
        c: '"az group create -n {{bundle.parameters.RESOURCE_GROUP}} -l {{bundle.parameters.LOCATION}}"'
  - exec: 
      description: "Azure group deployment"
      command: "az"
      arguments: 
        - "deployment"
        - "create" 
        - "--name"
        - "azuredeploy-prereqs-dev"
        - "--location"
        - '{{bundle.parameters.LOCATION}}'
        - "--template-file"
        - "./azuredeploy-prereqs.json"
        - "--parameters"
        - 'resourceGroupName={{bundle.parameters.RESOURCE_GROUP}}'
        - 'resourceGroupLocation={{bundle.parameters.LOCATION}}'
        - "--query"
        - "properties.outputs.identitiesDeploymentName.value"
        - "-o" 
        - "tsv"
      outputs:
        - name: IDENTITIES_DEPLOYMENT_NAME
          regex: '(.*)\s'
  - exec:
      command: bash
      description: "DELIVERY_ID_NAME"
      flags:
        c: '"az group deployment show -g {{bundle.parameters.RESOURCE_GROUP}} -n {{bundle.outputs.IDENTITIES_DEPLOYMENT_NAME}} --query properties.outputs.deliveryIdName.value -o tsv"'
      outputs:
        - name: DELIVERY_ID_NAME
          regex: '(.*)\s'
  - exec:
      command: bash
      description: "DELIVERY_ID_PRINCIPAL_ID"
      flags:
        c: '"az identity show -g {{bundle.parameters.RESOURCE_GROUP}} -n {{bundle.outputs.DELIVERY_ID_NAME}} --query principalId -o tsv"'
      outputs:
        - name: DELIVERY_ID_PRINCIPAL_ID
          regex: '(.*)\s'
  - exec:
      command: bash
      description: "DRONESCHEDULER_ID_NAME"
      flags:
        c: '"az group deployment show -g {{bundle.parameters.RESOURCE_GROUP}} -n {{bundle.outputs.IDENTITIES_DEPLOYMENT_NAME}} --query properties.outputs.droneSchedulerIdName.value -o tsv"'
      outputs:
        - name: DRONESCHEDULER_ID_NAME
          regex: '(.*)\s'
  - exec:
      command: bash
      description: "DRONESCHEDULER_ID_PRINCIPAL_ID"
      flags:
        c: '"az identity show -g {{bundle.parameters.RESOURCE_GROUP}} -n {{bundle.outputs.DRONESCHEDULER_ID_NAME}} --query principalId -o tsv"'
      outputs:
        - name: DRONESCHEDULER_ID_PRINCIPAL_ID
          regex: '(.*)\s'
  - exec:
      command: bash
      description: "WORKFLOW_ID_NAME"
      flags:
        c: '"az group deployment show -g {{bundle.parameters.RESOURCE_GROUP}} -n {{bundle.outputs.IDENTITIES_DEPLOYMENT_NAME}} --query properties.outputs.workflowIdName.value -o tsv"'
      outputs:
        - name: WORKFLOW_ID_NAME
          regex: '(.*)\s'
  - exec:
      command: bash
      description: "WORKFLOW_ID_PRINCIPAL_ID"
      flags:
        c: '"az identity show -g {{bundle.parameters.RESOURCE_GROUP}} -n {{bundle.outputs.WORKFLOW_ID_NAME}} --query principalId -o tsv"'
      outputs:
        - name: WORKFLOW_ID_PRINCIPAL_ID
          regex: '(.*)\s'
  - exec:
      command: bash
      description: "GATEWAY_CONTROLLER_ID_NAME"
      flags:
        c: '"az group deployment show -g {{bundle.parameters.RESOURCE_GROUP}} -n {{bundle.outputs.IDENTITIES_DEPLOYMENT_NAME}} --query properties.outputs.appGatewayControllerIdName.value -o tsv"'
      outputs:
        - name: GATEWAY_CONTROLLER_ID_NAME
          regex: '(.*)\s'
  - exec:
      command: bash
      description: "GATEWAY_CONTROLLER_ID_PRINCIPAL_ID"
      flags:
        c: '"az identity show -g {{bundle.parameters.RESOURCE_GROUP}} -n {{bundle.outputs.GATEWAY_CONTROLLER_ID_NAME}} --query principalId -o tsv"'
      outputs:
        - name: GATEWAY_CONTROLLER_ID_PRINCIPAL_ID
          regex: '(.*)\s'
  - exec:
      command: bash
      description: "RESOURCE_GROUP_ACR"
      flags:
        c: '"az group deployment show -g {{bundle.parameters.RESOURCE_GROUP}} -n {{bundle.outputs.IDENTITIES_DEPLOYMENT_NAME}} --query properties.outputs.acrResourceGroupName.value -o tsv"'
      outputs:
        - name: RESOURCE_GROUP_ACR
          regex: '(.*)\s'
  - exec:
      command: bash
      description: "testing it out"
      flags:
        c: '"az ad sp show --id {{bundle.outputs.DELIVERY_ID_PRINCIPAL_ID}}"'
# the previous blows up.
upgrade:
  - exec:
      description: "World 2.0"
      command: bash
      flags:
        c: echo World 2.0

uninstall:
  - exec:
      description: "Uninstall Hello World"
      command: bash
      flags:
        c: echo Goodbye World


# See https://porter.sh/author-bundles/#dependencies
#dependencies:
#  mysql:
#    tag: getporter/mysql:v0.1.1
#    parameters:
#      database-name: wordpress

outputs:
  - name: IDENTITIES_DEPLOYMENT_NAME
    type: string
    description: "The deployment name for identity prerequisites."
  - name: DELIVERY_ID_NAME
    type: string
    description: "The resource id for the delivery."
  - name: DELIVERY_ID_PRINCIPAL_ID
    type: string
    description: "The identity principal for the delivery service."
  - name: DRONESCHEDULER_ID_NAME
    type: string
    description: "The resource id for the dronescheduler service."
  - name: DRONESCHEDULER_ID_PRINCIPAL_ID
    type: string
    description: "The identity principal id for the dronescheduler service." 
  - name: WORKFLOW_ID_NAME
    type: string
    description: "The resource id for the workflow service."
  - name: WORKFLOW_ID_PRINCIPAL_ID
    type: string
    description: "The indentity principal for the workflow service."
  - name: GATEWAY_CONTROLLER_ID_NAME
    type: string
    description: "The resource ID for the gateway controller."
  - name: GATEWAY_CONTROLLER_ID_PRINCIPAL_ID
    type: string
    description: "The identity principal for the gateway controller."
  - name: RESOURCE_GROUP_ACR
    type: string
    description: "The resource group name for the ACR instance."

parameters:
  - name: LOCATION
    type: string
    description: "The region into which it will be deployed."
    default: westus2
  - name: RESOURCE_GROUP
    type: string
    description: "The resource group that will control the resources."
    default: mspnp-ref-impl
#  - name: AZURE_DEPLOYMENT_NAME
#    type: string
#    description: "The name of the deployment."
#    default: 
#    applyTo:
#      - uninstall
    



credentials:
  - name: SSH_PUBLIC_KEY_FILE
    type: file
    path: /root/.ssh/id_rsa.pub
  - name: SUBSCRIPTION_ID
    env: SUBSCRIPTION_ID
    description: "The Azure subscription in which to create the shadow resources for the deployment."
  - name: SUBSCRIPTION_NAME
    description: "The name of the Azure subscription."
    env: SUBSCRIPTION_NAME
  - name: SP_APP_ID
    description: "The client id for the service principal used to automate the bundle's actions."
    env: SP_APP_ID
  - name: TENANT_ID
    description: "The tenant identity in which the service principal resides."
    env: TENANT_ID
  - name: SP_CLIENT_SECRET
    description: "The service principal password that is used to log into Azure inside the bundle."
    env: SP_CLIENT_SECRET
  - name: SP_OBJECT_ID
    description: "The service principal object id used in subsequent calls."
    env: SP_OBJECT_ID
